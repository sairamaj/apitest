<UserControl x:Class="ApiManager.Views.RunDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ApiManager.Views"
			 xmlns:views="clr-namespace:ApiManager.Scripts.Views"
			 mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<ImageBrush x:Key="ScenarioSuccessImageBrush" ImageSource="../images/success.png" />
		<ImageBrush x:Key="ScenarioFailedImageBrush" ImageSource="../images/failed.png" />
		<ImageBrush x:Key="ApiButtonImageBrush" ImageSource="../images/api.png" />
		<ImageBrush x:Key="JsButtonImageBrush" ImageSource="../images/js.png" />
		<ImageBrush x:Key="ExtractVariableButtonImageBrush" ImageSource="../images/extract.png" />
		<ImageBrush x:Key="AssertButtonImageBrush" ImageSource="../images/assert.png" />

		<Style x:Key="DataHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
			<Setter Property="Visibility" Value="Collapsed" />
		</Style>

		<Style x:Key="ScenarioStatusStyle">
			<Setter Property="Control.Background" Value="{StaticResource ScenarioSuccessImageBrush}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding ApiExecuteInfo.Success}" Value="False" >
					<Setter Property="Control.Background" Value="{StaticResource ScenarioFailedImageBrush}" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="ExtractVariableStyle">
			<Setter Property="Control.Background" Value="Red" />
			<Setter Property="Control.FontWeight" Value="Bold" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding ExtractVariableInfo.Success}" Value="True" >
					<Setter Property="Control.Background" Value="LightGreen" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="AssertStyle">
			<Setter Property="Control.Background" Value="Red" />
			<Setter Property="Control.FontWeight" Value="Bold" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding AssertInfo.Success}" Value="True" >
					<Setter Property="Control.Background" Value="LightGreen" />
				</DataTrigger>
			</Style.Triggers>
		</Style>


		<Style x:Key="JsScriptStyle" >
			<Setter Property="Control.Foreground" Value="LightGreen" />
			<Setter Property="Control.FontWeight" Value="Bold" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding JsScriptInfo.IsError}" Value="True" >
					<Setter Property="Control.Foreground" Value="Red" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="ApiStyle" >
			<Setter Property="Control.Foreground" Value="Red" />
			<Setter Property="Control.FontWeight" Value="Bold" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsSuccess}" Value="True" >
					<Setter Property="Control.Foreground" Value="Green" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="ClearButtonStyle">
			<Setter Property="Control.Visibility" Value="Visible" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding ApisCount}" Value="0" >
					<Setter Property="Control.Visibility" Value="Hidden" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="InfoTextBoxStyle">
			<Setter Property="Control.Visibility" Value="Hidden" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding ApisCount}" Value="0" >
					<Setter Property="Control.Visibility" Value="Visible" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="ApplicationLinkButtonNoUnderLine" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<TextBlock>
						    <ContentPresenter />
						</TextBlock>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Foreground" Value="Blue" />
			<Setter Property="FontSize" Value="13" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Margin" Value="15,0,0,0" />
			<Setter Property="Cursor" Value="Hand" />

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Foreground" Value="Red" />
				</Trigger>
				<DataTrigger Binding="{Binding ApiInfo.JwtToken}" Value="">
					<Setter Property="Visibility" Value="Hidden" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="ApplicationLinkButtonNoUnderLine2" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<TextBlock>
						    <ContentPresenter />
						</TextBlock>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Foreground" Value="Blue" />
			<Setter Property="FontSize" Value="13" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Margin" Value="15,0,0,0" />
			<Setter Property="Cursor" Value="Hand" />

			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Foreground" Value="Red" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<DataTemplate x:Key="AssertHeaderTemplate">
			<Expander >
				<Expander.Header>
					<StackPanel Orientation="Horizontal" Style="{StaticResource AssertStyle}" Margin="30,0,0,0">
						<Button  Background="{StaticResource AssertButtonImageBrush}" Width="22" Height="22" />
						<TextBlock  Text="{Binding AssertInfo.Variable}" Margin="3,0,0,0" Width="80" 
									Foreground="Black" TextAlignment="Right" FontWeight="Bold"/>
						<TextBlock  Text="{Binding AssertInfo.Expected}" Margin="3,0,0,0" Width="80" 
									Foreground="Black" TextAlignment="Right" FontWeight="Bold"/>
						<TextBlock Text="=" FontWeight="Bold" Foreground="Black" />
						<TextBlock  Text="{Binding AssertInfo.Actual}" Margin="1,0,0,0" 
									Width="80" Foreground="Black" TextAlignment="Left" FontWeight="Bold"/>
					</StackPanel>
				</Expander.Header>
				<Grid Background="White">
					<Grid.RowDefinitions>
						<RowDefinition Height="100"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="700"/>
					</Grid.ColumnDefinitions>
					<TextBox Grid.Row="0" Grid.Column="0" Text="{Binding AssertInfo.Message}" TextWrapping="Wrap" Height="400" Foreground="Black" />
				</Grid>
			</Expander>
		</DataTemplate>

		<DataTemplate x:Key="ExtractHeaderTemplate">
			<Expander >
				<Expander.Header>
					<StackPanel Orientation="Horizontal" Style="{StaticResource ExtractVariableStyle}" Margin="30,0,0,0">
						<Button  Background="{StaticResource ExtractVariableButtonImageBrush}" Width="22" Height="22" />
						<TextBlock  Text="{Binding ExtractVariableInfo.Variable}" Margin="3,0,0,0" Width="80" 
									Foreground="Black" TextAlignment="Right" FontWeight="Bold"/>
						<TextBlock Text="=" FontWeight="Bold" Foreground="Black" />
						<TextBlock  Text="{Binding ExtractVariableInfo.ShortValue}" Margin="3,0,0,0" 
									Foreground="Black" FontWeight="Bold" TextAlignment="Left"/>
					</StackPanel>
				</Expander.Header>
				<Grid Background="White">
					<Grid.RowDefinitions>
						<RowDefinition Height="30"/>
						<RowDefinition Height="300"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="700"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding ExtractVariableInfo.Variable}" FontWeight="Bold"/>
					<TextBox Grid.Row="1" Grid.Column="0" Text="{Binding ExtractVariableInfo.ValueOrMessage}" TextWrapping="Wrap" Height="400" Foreground="Black" />
				</Grid>
			</Expander>
		</DataTemplate>

		<DataTemplate x:Key="ErrorHeaderTemplate">
			<Expander >
				<Expander.Header>
					<StackPanel Orientation="Horizontal" Background="Red" Margin="30,0,0,0"  >
						<TextBlock  Text="{Binding ErrorInfo.Error}" 
									Foreground="Black" TextAlignment="Right" FontWeight="Bold"/>
					</StackPanel>
				</Expander.Header>
				<Grid Background="White">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="700"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding ErrorInfo.Error}" FontWeight="Bold"/>
				</Grid>
			</Expander>
		</DataTemplate>

		<DataTemplate x:Key="ApiExecuteHeaderTemplate">
			<Expander >
				<Expander.Header>
					<StackPanel Orientation="Horizontal" Background="LightCyan" >
						<Button  Style="{StaticResource ScenarioStatusStyle}" Width="22" Height="22"/>
						<TextBlock  Text="{Binding ApiExecuteInfo.Scenario.Name}" Margin="3,0,0,0" 
									Foreground="Black" TextAlignment="Right" FontWeight="Bold"/>
						<TextBlock Text="(" Margin="5,0,0,0" />
						<TextBlock  Text="{Binding ApiExecuteInfo.Environment.Name}" 
									Foreground="Black" TextAlignment="Right" FontWeight="Bold"/>
						<TextBlock Text=")"/>
					</StackPanel>
				</Expander.Header>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="600"/>
					</Grid.ColumnDefinitions>
					<TextBox Grid.Row="0" Grid.Column="0" Text="{Binding ApiExecuteInfo.ScenarioContent}" 
							 TextWrapping="Wrap" Height="400" Foreground="Black" IsReadOnly="True" />
				</Grid>
			</Expander>
		</DataTemplate>


		<DataTemplate x:Key="JsScrptHeaderTemplate">
			<Expander >
				<Expander.Header>
					<StackPanel Orientation="Horizontal" Style="{StaticResource JsScriptStyle}" Background="White" Margin="30,0,0,0">
						<Button  Background="{StaticResource JsButtonImageBrush}" Width="22" Height="22" />
						<TextBlock  Text="{Binding ScriptInfo}" Margin="3,0,0,0" TextAlignment="Right"/>
					</StackPanel>
				</Expander.Header>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="40"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="600"/>
					</Grid.ColumnDefinitions>
					<TextBox Grid.Row="0" Grid.Column="0" Text="{Binding JsScriptInfo.ScriptFileName}" 
							 TextWrapping="Wrap" Height="400" Foreground="Black" IsReadOnly="True" FontWeight="Bold"/>
					<views:JavaScriptView DataContext="{Binding Script}" Grid.Row="1" Grid.Column="0" />
					<!--<TextBox Grid.Row="1" Grid.Column="0" Text="{Binding ScriptFileContent}" 
							 TextWrapping="Wrap" Height="400" Foreground="Black" IsReadOnly="True" />-->
				</Grid>
			</Expander>
		</DataTemplate>


		<DataTemplate x:Key="ApiHeaderTemplate">
			<Expander Background="White">
				<Expander.Header>
					<StackPanel Orientation="Horizontal" Style="{StaticResource ApiStyle}"  Background="White" Margin="30,0,0,0">
						<Button  Background="{StaticResource ApiButtonImageBrush}" Width="22" Height="22" />
						<TextBlock  Text="{Binding ApiInfo.Method}" Margin="3,0,0,0" Width="40"/>
						<TextBlock  Text="{Binding ApiInfo.RelativeUrl}" Margin="3,0,0,0" Width="200"/>
						<TextBlock  Text="{Binding ApiInfo.HttpCode}" Width="20" HorizontalAlignment="Right"/>
						<StackPanel Width="60" Orientation="Horizontal">
							<TextBlock  Text="("/>
							<TextBlock  Text="{Binding ApiInfo.StatusCode}"/>
							<TextBlock  Text=")" Margin="3,0,0,0"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Margin="3,0,0,0">
							<TextBlock  Text="{Binding ApiInfo.TimeTakenString}" HorizontalAlignment="Right"/>
							<TextBlock Text="(msec)" HorizontalAlignment="Left"/>
						</StackPanel>
						<Button Content="JwtToken" Style="{StaticResource ApplicationLinkButtonNoUnderLine}" Command="{Binding ShowJwtTokenCommand}"/>
						<Button Content="Html"  Style="{StaticResource ApplicationLinkButtonNoUnderLine2}" Command="{Binding ViewAsHTMLCommand}" Margin="5,0,0,0"/>
					</StackPanel>
				</Expander.Header>
				<local:RequestResponseContainerView  DataContext="{Binding ApiInfo}" Height="500"/>
			</Expander>
		</DataTemplate>

		<local:InfoDataHeaderTemplateSelector x:Key="InfoDataHeaderTemplateSelector" 
                                             ApiInfoHeaderTemplate="{StaticResource ApiHeaderTemplate}"
                                             ExtractHeaderTemplate="{StaticResource ExtractHeaderTemplate}"
											 AssertHeaderTemplate="{StaticResource AssertHeaderTemplate}"
											 ErrorHeaderTemplate="{StaticResource ErrorHeaderTemplate}"
											  ApiExecuteHeaderTemplate="{StaticResource ApiExecuteHeaderTemplate}"
											  JsScrptHeaderTemplate="{StaticResource JsScrptHeaderTemplate}"
                                        />

		<!--<local:InfoDataTemplateSelector x:Key="InfoDataTemplateSelector" 
                                             ApiDataTemplate="{StaticResource ApiDataTemplate}"
                                             ExtractDataTemplate="{StaticResource ExtractDataTemplate}"
                                        />-->

	</UserControl.Resources>

	<Grid>
		<Grid>
			<Grid Background="White">
				<Grid.RowDefinitions>
					<RowDefinition Height="30"/>
					<RowDefinition />
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0" Grid.Column="0" Text="Api Responses will be shown here." FontWeight="Bold" HorizontalAlignment="Left" Style="{StaticResource InfoTextBoxStyle}" />
				<Button Grid.Row="0" Grid.Column="0" Content="Clear" Command="{Binding ClearCommand}" Width="60" Height="25" Margin="3,0,0,0" HorizontalAlignment="Left" Style="{StaticResource ClearButtonStyle}"/>
				<Grid Grid.Row="1" Grid.Column="0">
					<ListView 
					ItemsSource="{Binding ApiInfos}"
					BorderThickness="0" 
					ItemTemplateSelector="{StaticResource InfoDataHeaderTemplateSelector}" 
					Background="White" 
					ScrollViewer.VerticalScrollBarVisibility="Auto"
					ScrollViewer.CanContentScroll="False"							
					/>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
